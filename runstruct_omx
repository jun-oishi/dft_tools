#!/bin/bash

# tpl set with parameters like cutoff
TPLFILE="../omxin.dat.tpl"
# KPPRA, OMXCOMMAND must be defined
PARAMFILE="../param.sh"
source $PARAMFILE
# lines consists of `symbol basis pottential up down`
PPLIST="../pp.dat"

# src file generated by maps
STRFILE="str.out"
# input file to generate
OMXIN="omxin.dat"

SYSTEM_NAME=`basename $PWD`
# output file from openmx
OMXSTDOUT="$SYSTEM_NAME.std"

# basic calculation formatted for floating point
function bcl () {
  echo `echo $1 | bc -l | sed "s/^\(-\)\?\.\([0-9]\)/\10.\2/"`
}

function load_structure () {
  # unit cell
  echo "Atoms.UnitVectors.Unit  Ang" >> $OMXIN
  echo "<Atoms.UnitVectors" >> $OMXIN
  cat $1 | cellcvrt -c -sig=9 | tail -n +4 | head -3 >> $OMXIN
  echo "Atoms.UnitVectors>" >> $OMXIN

  NAT=`cellcvrt -f < str.out | tail -n +7 | wc -l`
  NTYPE=`cellcvrt -f < str.out | tail -n +7 | awk '{print $4}' | sort -u | wc -l`
  TYPES=(`cellcvrt -f < str.out | tail -n +7 | awk '{print $4}' | sort -u`)

  # set up kmesh
  NKPT=`echo $KPPRA/$NAT | bc`
  KGRID=`cat $1 | cellcvrt -f | head -3 | sed "1i$NKPT" | kmesh -q -r`
  sed -i "s/\$KGRID/$KGRID/g" $OMXIN

  # species
  echo "Species.Number ${NTYPE}" >> $OMXIN
  echo "<Definition.of.Atomic.Species" >> $OMXIN
  for TYPE in ${TYPES[@]}; do
    grep "$TYPE" $PPLIST | awk '{print "  " $1, $2, $3}' >> $OMXIN
  done
  echo "Definition.of.Atomic.Species>" >> $OMXIN
  echo "" >> $OMXIN

  # atomic positions
  echo "Atoms.Number $NAT" >> $OMXIN
  echo "Atoms.SpeciesAndCoordinates.Unit  Ang" >> $OMXIN
  echo "<Atoms.SpeciesAndCoordinates" >> $OMXIN
  INT=1
  while [ "$INT" -le "$NAT" ]; do
    SYMBOL=`cellcvrt -c -sig=9 < str.out | tail -n +7 | head -${INT} | tail -1 | awk '{print $4}'`
    XYZ=`cellcvrt -c -sig=9 < str.out | tail -n +7 | head -${INT} | tail -1 | awk '{print $1, $2, $3}'`
    UP=`grep $SYMBOL $PPLIST | awk '{print $4}'`
    DN=`grep $SYMBOL $PPLIST | awk '{print $5}'`
    echo "  $INT $SYMBOL $XYZ $UP $DN" >> $OMXIN
    let "$((INT++))"
  done
  echo "Atoms.SpeciesAndCoordinates>" >> $OMXIN
  echo "" >> $OMXIN
}

cp $TPLFILE $OMXIN
sed -i "s/\$SYSTEM_NAME/$SYSTEM_NAME/g" omxin.dat
load_structure $STRFILE $OMXIN

# run calculation
printf "running '$OMXCOMMAND $OMXIN > $OMXSTDOUT' in $PWD ..."
$OMXCOMMAND $OMXIN > $OMXSTDOUT
status=$?
printf "done\n"

# check if calculation is successful
if [ $status -ne 0 ] || [ `grep "normally finished" $OMXSTDOUT | wc -l` -eq 0 ]; then
  echo "" > energy
  echo "Exception occured in calculation" > error
  exit 1
fi

# check convergence
if [ `grep "geometry .* achieved" $OMXSTDOUT | wc -l` -eq 0 ]; then
  echo "" > energy
  echo "Calculation did not converge" > error
  exit 0
fi

# get energy
FEHARTREE=`grep "Utot  =" $OMXSTDOUT | tail -n 1 | awk '{print $3}'`
FEeV=`bcl "$FEHARTREE*27.2114"`
echo $FEeV > energy
exit 0
